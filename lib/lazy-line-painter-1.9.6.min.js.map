{"version":3,"sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/./src/index.js","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/ployfill.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_events","_interopRequireDefault","_easing","_ployfill","LazyLinePainter","el","config","_this","this","_classCallCheck","document","hidden","pause","resume","classList","add","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","ease","drawSequential","speedMultiplier","reverse","paused","progress","repeat","longestDuration","log","offset","getBoundingClientRect","Events","Ployfill","__raf","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","addEventListener","_onVisibilityChange","paths","Boolean","getDataset","llpComposed","querySelectorAll","_uncomposed","length","path","push","id","replace","dataset","llpId","llpDuration","llpDelay","console","erase","_paint","emit","cancelAnimationFrame","_this2","requestAnimationFrame","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","remove","prop","_setProgress","_setDelay","_setReverse","_setEase","_setRepeat","_getProgress","_updatePaths","totalDuration","_getTotalDuration","_getLongestDuration","_calcPathDurations","duration","startProgress","durationProgress","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","llpStrokeDash","_setStyleAttrs","llpStrokeColor","stroke","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","strokeLinecap","llpStrokeJoin","strokeLinejoin","index","_getPathLength","strokeDasharray","_getStrokeDashArray","_this3","timestamp","performance","now","_this4","linearProgress","paint","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","Easing","Math","round","position","x","left","y","top","pathDelay","pathTotalDuration","_getTotalLength","p1","p2","sqrt","pow","PI","getAttribute","rx","parseInt","ry","h","_getDistance","previousPos","points","totalLength","numberOfItems","currentPos","getItem","_getPolylineLength","tagName","toLowerCase","_getCircleLength","_getRectLength","_getLineLength","_getPolygonLength","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","floor","join","EventEmitter","callback","_eventEmitterCallbacks","addListener","on","off","indexOf","splice","removeListener","evt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","trigger","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBounce","easeOutBounce","easeInOutBounce","ployfill","ele","matchStr","attrs","attributes","match","all","letter","toUpperCase"],"mappings":"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","file":"lazy-line-painter-1.9.6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/camoconnell/lazy-line-painter\n * http://www.camoconnell.com\n *\n * Copyright 2013-2019 Cam O'Connell\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from './events';\nimport Easing from './easing';\nimport Ployfill from './ployfill';\n\nclass LazyLinePainter {\n\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n\n    this.el = el;\n    this.el.classList.add('lazy-line-painter');\n\n    this.config = Object.assign({\n\n      strokeWidth: null,\n      strokeDash: null,\n      strokeColor: null,\n      strokeOverColor: null,\n      strokeCap: null,\n      strokeJoin: null,\n      strokeOpacity: null,\n\n      delay: 0,\n      ease: null,\n      drawSequential: false,\n      speedMultiplier: 1,\n      reverse: false,\n      paused: false,\n      progress: 0,\n      repeat: 0,\n\n      longestDuration: 0,\n      log: true,\n      offset: this.el.getBoundingClientRect()\n\n    }, config, {});\n\n    Object.assign(this, Events, {});\n    Object.assign(this, Ployfill, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n    document.addEventListener('visibilitychange', this._onVisibilityChange);\n  }\n\n  _generatePaths() {\n\n    let paths;\n    let composed = Boolean(this.getDataset(this.el).llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll('[data-llp-id]');\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n\n      let path = {\n        el: paths[i]\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    let paths = this.el.querySelectorAll('path, polygon, circle, ellipse, polyline, line, rect');\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, '');\n\n      id = id.replace('.', '');\n      id = id.replace('-', '');\n      let dataset = this.getDataset(paths[i]);\n\n      dataset.llpId = id + '-' + i;\n\n      if (!dataset.llpDuration) {\n        dataset.llpDuration = 1000;\n      }\n      if (!dataset.llpDuration) {\n        dataset.llpDelay = 0;\n      }\n    }\n\n    if (this.config.log) {\n      console.log('This lazy line is uncomposed! Visit http://lazylinepainter.info to compose your masterpiece!');\n    }\n\n    return paths;\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n\n  paint(config) {\n\n    // update playback arguments\n    Object.assign(this.config, config);\n    this._updateDuration();\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit('start');\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (this.config) {\n      this.config.paused = true;\n    }\n    cancelAnimationFrame(this.__raf);\n    this.emit('pause');\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config && this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n      this.emit('resume');\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n\n    this.emit('erase');\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(prop, value) {\n    switch (prop) {\n      case 'progress':\n        this._setProgress(value);\n        break;\n      case 'delay':\n        this._setDelay(value);\n        break;\n      case 'reverse':\n        this._setReverse(value);\n        break;\n      case 'ease':\n        this._setEase(value);\n        break;\n      case 'repeat':\n        this._setRepeat(value);\n        break;\n      default:\n        if (this.config.log) {\n          console.log('property ' + prop + ' can not be set');\n        }\n    }\n  }\n\n  _setRepeat(repeat) {\n    this.config.repeat = repeat;\n  }\n\n  _setEase(ease) {\n    this.config.ease = ease;\n  }\n\n  _setProgress(progress) {\n    this.pause();\n    this.config.progress = this._getProgress(progress, this.config.ease);\n    this._updatePaths();\n    this.config.elapsedTime = this.config.progress * this.config.totalDuration;\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _setReverse(reverse) {\n    this.config.reverse = reverse;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n\n    let totalDuration = this._getTotalDuration();\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential ? totalDuration : longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.reverse) {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.totalDuration - (path.delay + path.duration);\n        }\n      } else {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.delay + path.delay;\n        }\n      }\n\n      path.startTime = startTime;\n      path.startProgress = (path.startTime / this.config.totalDuration);\n      path.durationProgress = (path.duration / this.config.totalDuration);\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n      let dataset = this.getDataset(path.el);\n\n      path.id = dataset.llpId;\n      path.delay = Number(dataset.llpDelay) || 0;\n      path.duration = Number(dataset.llpDuration) || 0;\n      path.reverse = Boolean(dataset.llpReverse) || false;\n      path.ease = Number(dataset.llpEase) || null;\n      path.strokeDash = dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n    let dataset = this.getDataset(path.el);\n\n    path.strokeColor = (dataset.llpStrokeColor || this.config.strokeColor);\n    if (path.strokeColor) {\n      path.el.style.stroke = path.strokeColor;\n    }\n\n    path.strokeOpacity = (dataset.llpStrokeOpacity || this.config.strokeOpacity);\n    if (path.strokeOpacity) {\n      path.el.style.strokeOpacity = path.strokeOpacity;\n    }\n\n    path.strokeWidth = (dataset.llpStrokeWidth || this.config.strokeWidth);\n    if (path.strokeWidth) {\n      path.el.style.strokeWidth = path.strokeWidth;\n    }\n\n    path.strokeCap = (dataset.llpStrokeCap || this.config.strokeCap);\n    if (path.strokeCap) {\n      path.el.style.strokeLinecap = path.strokeCap;\n    }\n\n    path.strokeJoin = (dataset.llpStrokeJoin || this.config.strokeJoin);\n    if (path.strokeJoin) {\n      path.el.style.strokeLinejoin = path.strokeJoin;\n    }\n  }\n\n  _setupPaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(path, path.length);\n      path.el.style.strokeDashoffset = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  };\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint() {\n\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit('update');\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = (timestamp - this.config.startTime);\n    this.config.linearProgress = (this.config.elapsedTime / this.config.totalDuration);\n\n    this.config.progress = this._getProgress(this.config.linearProgress, this.config.ease);\n    // console.log(this.config.elapsedTime, ' ', this.config.totalDuration);\n\n    this._updatePaths();\n\n    if (this.config.linearProgress >= 0 && this.config.linearProgress <= 1) {\n      this.__raf = requestAnimationFrame(() => {\n        this._paint();\n      });\n    } else {\n      if (this.config.repeat > 0) {\n        this.config.repeat--;\n        this.paint();\n      } else if (this.config.repeat === -1) {\n        this.paint();\n      } else {\n        this.emit('complete');\n      }\n    }\n  }\n\n  _updatePaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= (path.startProgress + path.durationProgress)\n    ) {\n      elapsedProgress = (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (this.config.progress >= (path.startProgress + path.durationProgress)) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n\n    let el = path.el;\n    let length = path.progress * path.length;\n\n    if (path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else if (this.config.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = (path.length - length);\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n\n    if (path.progress === 1) {\n\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n\n        this.emit('complete:' + path.id, path);\n        this.emit('complete:all', path);\n      }\n\n    } else if (path.progress > 0.00001) {\n\n      if (!path.onStrokeStartDone) {\n        this.emit('start:' + path.id, path);\n        this.emit('start:all', path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit('update:' + path.id, path);\n      this.emit('update:all', path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round((path.progress * (path.length - 1)));\n    let position = path.positions[index];\n\n    if (position) {\n      path.position = {\n        x: this.config.offset.left + position.x,\n        y: this.config.offset.top + position.y\n      };\n    }\n\n  }\n\n  _getTotalDuration() {\n\n    let totalDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += (paths[i].duration + pathDelay);\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n\n    let longestDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  };\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return this._getTotalLength(el); // el.getTotalLength());\n  }\n\n  _getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  _getCircleLength(el) {\n    return Math.PI * 2 * el.getAttribute('r');\n  }\n\n  _getEllipseLength(el) {\n    let rx = parseInt(el.getAttribute('rx'), 1);\n    let ry = parseInt(el.getAttribute('ry'), 1);\n    let h = Math.pow((rx - ry), 2) / Math.pow((rx + ry), 2);\n    let totalLength = (Math.PI * (rx + ry)) * (1 + ((3 * h) / (Math.sqrt(4 - (3 * h)))));\n\n    return totalLength;\n  }\n\n  _getRectLength(el) {\n    return (el.getAttribute('width') * 2) + (el.getAttribute('height') * 2);\n  }\n\n  _getLineLength(el) {\n    return this._getDistance(\n      {\n        x: el.getAttribute('x1'),\n        y: el.getAttribute('y1')\n      },\n      {\n        x: el.getAttribute('x2'),\n        y: el.getAttribute('y2')\n      }\n    );\n  }\n\n  _getPolylineLength(el) {\n    const points = el.points;\n    let totalLength = 0;\n    let previousPos;\n\n    for (let i = 0 ; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n\n      if (i > 0) {\n        totalLength += this._getDistance(previousPos, currentPos);\n      }\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  _getPolygonLength(el) {\n    const points = el.points;\n\n    return this._getPolylineLength(el) + this._getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n  }\n\n  _getTotalLength(el) {\n\n    let length;\n\n    let tagName = el.tagName.toLowerCase();\n\n    switch (tagName) {\n      case 'circle':\n        length = this._getCircleLength(el);\n        break;\n      case 'rect':\n        length = this._getRectLength(el);\n        break;\n      case 'line':\n        length = this._getLineLength(el);\n        break;\n      case 'polyline':\n        length = this._getPolylineLength(el);\n        break;\n      case 'polygon':\n        length = this._getPolygonLength(el);\n        break;\n      default:\n        length = el.getTotalLength();\n    }\n\n    return length;\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    };\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + ' ' + length;\n    };\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = '';\n    let strokeDashArray = dashArray.split(',');\n\n    let strokeDashTotal = 0;\n    let strokeDashNum;\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    };\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - (strokeDashNum * strokeDashTotal);\n    for (let i = 0; i < strokeDashNum ; i++) {\n      strokeDashString += (dashArray + ', ');\n    };\n    let preArray = strokeDashString + strokeDashRemainder + ', ' + (length + 2);\n\n    return preArray.split(',').join('px,') + 'px';\n  }\n\n  _onVisibilityChange = () => {\n    if (document.hidden) {\n      this.pause();\n    } else {\n      this.resume();\n    }\n  }\n\n}\nwindow.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== 'function') return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","\nlet Easing = {\n\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos(n * Math.PI / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin(n * Math.PI / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n\n","/**\n * @File:      ployfill Low version browser\n * @Author:    花夏(liubiao@itoxs.com)\n * @Version:   V0.0.1\n * @Date:     2019/2/19 上午11:41:45\n * https://github.com/huarxia/lazy-line-painter\n * Licensed under the MIT license.\n */\nlet ployfill = {};\n/**\n * Attribute set of elements\n * ele.dataset ---> ele.attributes\n */\n\nployfill.getDataset = function (ele) {\n  if (ele.dataset) {\n    return ele.dataset;\n  }\n  // Attribute set of elements\n  let attrs = ele.attributes,\n    dataset = {},\n    name,\n    matchStr,\n    i;\n\n  for (i = 0; i < attrs.length; i++) {\n    // Is it data- start?\n    matchStr = attrs[i].name.match(/^data-(.+)/);\n    if (matchStr) {\n      // data-auto-play Conversion to Hump autoPlay\n      name = matchStr[1].replace(/-([\\da-z])/gi, (all, letter) => {\n        return letter.toUpperCase();\n      });\n      dataset[name] = attrs[i].value;\n    }\n  }\n  return dataset;\n};\n\nexport default ployfill;\n"],"sourceRoot":""}