{"version":3,"sources":["webpack://lazy-line-painter/webpack/universalModuleDefinition","webpack://lazy-line-painter/webpack/bootstrap","webpack://lazy-line-painter/(webpack)/buildin/harmony-module.js","webpack://lazy-line-painter/./src/events.js","webpack://lazy-line-painter/./src/easing.js","webpack://lazy-line-painter/./src/Ployfill.js","webpack://lazy-line-painter/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","originalModule","webpackPolyfill","children","EventEmitter","callback","this","_eventEmitterCallbacks","push","addListener","on","off","indexOf","splice","removeListener","emit","evt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","trigger","Easing","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBounce","easeOutBounce","easeInOutBounce","ployfill","ele","dataset","matchStr","attrs","attributes","length","match","replace","all","letter","toUpperCase","LazyLinePainter","el","config","_this","_classCallCheck","document","hidden","pause","resume","classList","add","assign","strokeWidth","strokeDash","strokeColor","strokeOverColor","strokeCap","strokeJoin","strokeOpacity","delay","ease","drawSequential","speedMultiplier","reverse","paused","progress","repeat","longestDuration","log","offset","getBoundingClientRect","Events","Ployfill","__raf","__paths","_generatePaths","_parseDataAttrs","_updateDuration","_setupPaths","addEventListener","_onVisibilityChange","paths","Boolean","getDataset","llpComposed","querySelectorAll","_uncomposed","path","id","llpId","llpDuration","llpDelay","console","erase","_paint","cancelAnimationFrame","_this2","requestAnimationFrame","adjustStartTime","startTime","elapsedTime","onStrokeCompleteDone","style","strokeDashoffset","onStrokeStartDone","remove","prop","_setProgress","_setDelay","_setReverse","_setEase","_setRepeat","_getProgress","_updatePaths","totalDuration","_getTotalDuration","_getLongestDuration","_calcPathDurations","duration","startProgress","durationProgress","positions","_getPathPoints","_updatePosition","Number","llpReverse","llpEase","llpStrokeDash","_setStyleAttrs","llpStrokeColor","stroke","llpStrokeOpacity","llpStrokeWidth","llpStrokeCap","strokeLinecap","llpStrokeJoin","strokeLinejoin","index","_getPathLength","strokeDasharray","_getStrokeDashArray","_this3","timestamp","performance","now","_this4","linearProgress","paint","pathProgress","_getElapsedProgress","_setLine","_updateStrokeCallbacks","elapsedProgress","round","position","x","left","y","top","pathDelay","pathTotalDuration","_getTotalLength","p1","p2","getAttribute","rx","parseInt","ry","h","_getDistance","previousPos","points","totalLength","numberOfItems","currentPos","getItem","_getPolylineLength","tagName","toLowerCase","_getCircleLength","_getRectLength","_getLineLength","_getPolygonLength","getTotalLength","arr","getPointAtLength","_getStrokeDashString","dashArray","strokeDashNum","strokeDashRemainder","strokeDashString","strokeDashArray","split","strokeDashTotal","floor","join"],"mappings":"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","file":"lazy-line-painter-1.9.6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lazy-line-painter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lazy-line-painter\"] = factory();\n\telse\n\t\troot[\"lazy-line-painter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","let EventEmitter = {};\n\nEventEmitter.on = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  this._eventEmitterCallbacks[name] = this._eventEmitterCallbacks[name] || [];\n  this._eventEmitterCallbacks[name].push(callback);\n};\nEventEmitter.addListener = EventEmitter.on;\n\nEventEmitter.off = function (name, callback) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  const i = this._eventEmitterCallbacks[name].indexOf(callback);\n\n  if (i < 0) return;\n  this._eventEmitterCallbacks[name].splice(i, 1);\n};\nEventEmitter.removeListener = EventEmitter.off;\n\nEventEmitter.emit = function (name, evt) {\n  this._eventEmitterCallbacks = this._eventEmitterCallbacks || {};\n  if (!(name in this._eventEmitterCallbacks)) return;\n  for (let callback of this._eventEmitterCallbacks[name]) {\n    if (typeof callback !== 'function') return;\n    callback(evt);\n  }\n};\nEventEmitter.trigger = EventEmitter.emit;\n\nexport default EventEmitter;\n","\nlet Easing = {\n\n  easeLinear(n) {\n    return n;\n  },\n\n  easeInQuad(n) {\n    return n * n;\n  },\n\n  easeOutQuad(n) {\n    return n * (2 - n);\n  },\n\n  easeInOutQuad(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n;\n    return -0.5 * (--n * (n - 2) - 1);\n  },\n\n  easeInCubic(n) {\n    return n * n * n;\n  },\n\n  easeOutCubic(n) {\n    return --n * n * n + 1;\n  },\n\n  easeInOutCubic(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n;\n    return 0.5 * ((n -= 2) * n * n + 2);\n  },\n\n  easeInQuart(n) {\n    return n * n * n * n;\n  },\n\n  easeOutQuart(n) {\n    return 1 - --n * n * n * n;\n  },\n\n  easeInOutQuart(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n;\n    return -0.5 * ((n -= 2) * n * n * n - 2);\n  },\n\n  easeInQuint(n) {\n    return n * n * n * n * n;\n  },\n\n  easeOutQuint(n) {\n    return --n * n * n * n * n + 1;\n  },\n\n  easeInOutQuint(n) {\n    n *= 2;\n    if (n < 1) return 0.5 * n * n * n * n * n;\n    return 0.5 * ((n -= 2) * n * n * n * n + 2);\n  },\n\n  easeInSine(n) {\n    return 1 - Math.cos(n * Math.PI / 2);\n  },\n\n  easeOutSine(n) {\n    return Math.sin(n * Math.PI / 2);\n  },\n\n  easeInOutSine(n) {\n    return 0.5 * (1 - Math.cos(Math.PI * n));\n  },\n\n  easeInExpo(n) {\n    return n === 0 ? 0 : Math.pow(1024, n - 1);\n  },\n\n  easeOutExpo(n) {\n    return n === 1 ? n : 1 - Math.pow(2, -10 * n);\n  },\n\n  easeInOutExpo(n) {\n    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if ((n *= 2) < 1) return 0.5 * Math.pow(1024, n - 1);\n    return 0.5 * (-Math.pow(2, -10 * (n - 1)) + 2);\n  },\n\n  easeInCirc(n) {\n    return 1 - Math.sqrt(1 - n * n);\n  },\n\n  easeOutCirc(n) {\n    return Math.sqrt(1 - --n * n);\n  },\n\n  easeInOutCirc(n) {\n    n *= 2;\n    if (n < 1) return -0.5 * (Math.sqrt(1 - n * n) - 1);\n    return 0.5 * (Math.sqrt(1 - (n -= 2) * n) + 1);\n  },\n\n  easeInBounce(n) {\n    return 1 - this.easeOutBounce(1 - n);\n  },\n\n  easeOutBounce(n) {\n    if (n < 1 / 2.75) {\n      return 7.5625 * n * n;\n    } else if (n < 2 / 2.75) {\n      return 7.5625 * (n -= 1.5 / 2.75) * n + 0.75;\n    } else if (n < 2.5 / 2.75) {\n      return 7.5625 * (n -= 2.25 / 2.75) * n + 0.9375;\n    }\n    return 7.5625 * (n -= 2.625 / 2.75) * n + 0.984375;\n\n  },\n\n  easeInOutBounce(n) {\n    if (n < 0.5) return this.easeInBounce(n * 2) * 0.5;\n    return this.easeOutBounce(n * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\nexport default Easing;\n\n","/**\n * @File:      ployfill Low version browser\n * @Author:    花夏(liubiao@itoxs.com)\n * @Version:   V0.0.1\n * @Date:     2019/2/19 上午11:41:45\n * https://github.com/huarxia/lazy-line-painter\n * Licensed under the MIT license.\n */\nlet ployfill = {};\n/**\n * Attribute set of elements\n * ele.dataset ---> ele.attributes\n */\n\nployfill.getDataset = function (ele) {\n  if (ele.dataset) {\n    return ele.dataset;\n  }\n  // Attribute set of elements\n  let attrs = ele.attributes,\n    dataset = {},\n    name,\n    matchStr,\n    i;\n\n  for (i = 0; i < attrs.length; i++) {\n    // Is it data- start?\n    matchStr = attrs[i].name.match(/^data-(.+)/);\n    if (matchStr) {\n      // data-auto-play Conversion to Hump autoPlay\n      name = matchStr[1].replace(/-([\\da-z])/gi, (all, letter) => {\n        return letter.toUpperCase();\n      });\n      dataset[name] = attrs[i].value;\n    }\n  }\n  return dataset;\n};\n\nexport default ployfill;\n","/*\n * Lazy Line Painter\n * SVG Stroke animation.\n *\n * https://github.com/camoconnell/lazy-line-painter\n * http://www.camoconnell.com\n *\n * Copyright 2013-2019 Cam O'Connell\n * All rights reserved.\n *\n * Licensed under the MIT license.\n *\n */\n\nimport Events from './events';\nimport Easing from './easing';\nimport Ployfill from './Ployfill';\n\nclass LazyLinePainter {\n\n  /**\n   * init\n   * Responsible for caching user options,\n   * @public\n   * @param  {object} opts user defined options\n   */\n\n  constructor(el, config) {\n\n    this.el = el;\n    this.el.classList.add('lazy-line-painter');\n\n    this.config = Object.assign({\n\n      strokeWidth: null,\n      strokeDash: null,\n      strokeColor: null,\n      strokeOverColor: null,\n      strokeCap: null,\n      strokeJoin: null,\n      strokeOpacity: null,\n\n      delay: 0,\n      ease: null,\n      drawSequential: false,\n      speedMultiplier: 1,\n      reverse: false,\n      paused: false,\n      progress: 0,\n      repeat: 0,\n\n      longestDuration: 0,\n      log: true,\n      offset: this.el.getBoundingClientRect()\n\n    }, config, {});\n\n    Object.assign(this, Events, {});\n    Object.assign(this, Ployfill, {});\n\n    this.__raf = null;\n    this.__paths = [];\n\n    this._generatePaths();\n    this._parseDataAttrs();\n    this._updateDuration();\n    this._setupPaths();\n\n    document.addEventListener('visibilitychange', this._onVisibilityChange);\n  }\n\n  _generatePaths() {\n\n    let paths;\n    let composed = Boolean(this.getDataset(this.el).llpComposed);\n\n    if (composed) {\n      paths = this.el.querySelectorAll('[data-llp-id]');\n    } else {\n      paths = this._uncomposed();\n    }\n\n    for (let i = 0; i < paths.length; i++) {\n\n      let path = {\n        el: paths[i]\n      };\n\n      this.__paths.push(path);\n    }\n  }\n\n  _uncomposed() {\n    let paths = this.el.querySelectorAll('path, polygon, circle, ellipse, polyline, line, rect');\n    let i;\n\n    for (i = 0; i < paths.length; i++) {\n      let id = this.el.id.replace(/ /g, '');\n\n      id = id.replace('.', '');\n      id = id.replace('-', '');\n      let dataset = this.getDataset(paths[i]);\n\n      dataset.llpId = id + '-' + i;\n\n      if (!dataset.llpDuration) {\n        dataset.llpDuration = 1000;\n      }\n      if (!dataset.llpDuration) {\n        dataset.llpDelay = 0;\n      }\n    }\n\n    if (this.config.log) {\n      console.log('This lazy line is uncomposed! Visit http://lazylinepainter.info to compose your masterpiece!');\n    }\n\n    return paths;\n  }\n\n  /**\n   * paint\n   * Responsible for drawing path.\n   * @public\n   */\n\n  paint(config) {\n\n    // update playback arguments\n    Object.assign(this.config, config);\n    this._updateDuration();\n\n    this.erase();\n\n    // begin animation\n    this._paint();\n\n    // fire start callback\n    this.emit('start');\n  }\n\n  /**\n   * pause\n   * Responsible for pausing path animation.\n   * @public\n   */\n  pause() {\n    if (this.config) {\n      this.config.paused = true;\n    }\n    cancelAnimationFrame(this.__raf);\n    this.emit('pause');\n  }\n\n  /**\n   * resume\n   * Responsible for resuming path animation.\n   * @public\n   */\n  resume() {\n    if (this.config && this.config.paused) {\n      requestAnimationFrame(() => {\n        this.adjustStartTime();\n      });\n      this.config.paused = false;\n      this.emit('resume');\n    }\n  }\n\n  /**\n   * erase\n   * Responsible for clearing path,\n   * paint can still be called on the element after it has been erased.\n   * @public\n   */\n  erase() {\n\n    // reset / cancel rAF\n    this.config.startTime = null;\n    this.config.elapsedTime = null;\n    cancelAnimationFrame(this.__raf);\n\n    // reset callback\n    this.config.onStrokeCompleteDone = false;\n\n    // reset paused\n    this.config.paused = false;\n\n    // empty contents of svg\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.style.strokeDashoffset = path.length;\n      path.onStrokeCompleteDone = false;\n      path.onStrokeStartDone = false;\n    }\n\n    this.emit('erase');\n  }\n\n  /**\n   * destroy\n   * Responsible for removing lazyline data and element from DOM\n   * @public\n   */\n  destroy() {\n\n    // retrieve / remove data object\n    this.config = null;\n\n    // empty container element\n    this.el.remove();\n    this.el = null;\n\n  }\n\n  /**\n   * set\n   * @public\n   */\n  set(prop, value) {\n    switch (prop) {\n      case 'progress':\n        this._setProgress(value);\n        break;\n      case 'delay':\n        this._setDelay(value);\n        break;\n      case 'reverse':\n        this._setReverse(value);\n        break;\n      case 'ease':\n        this._setEase(value);\n        break;\n      case 'repeat':\n        this._setRepeat(value);\n        break;\n      default:\n        if (this.config.log) {\n          console.log('property ' + prop + ' can not be set');\n        }\n    }\n  }\n\n  _setRepeat(repeat) {\n    this.config.repeat = repeat;\n  }\n\n  _setEase(ease) {\n    this.config.ease = ease;\n  }\n\n  _setProgress(progress) {\n    this.pause();\n    this.config.progress = this._getProgress(progress, this.config.ease);\n    this._updatePaths();\n    this.config.elapsedTime = this.config.progress * this.config.totalDuration;\n  }\n\n  _setDelay(delay) {\n    this.config.delay = delay;\n    this._updateDuration();\n  }\n\n  _setReverse(reverse) {\n    this.config.reverse = reverse;\n    this._updateDuration();\n  }\n\n  _updateDuration() {\n\n    let totalDuration = this._getTotalDuration();\n    let longestDuration = this._getLongestDuration();\n\n    this.config.totalDuration = this.config.drawSequential ? totalDuration : longestDuration;\n    this.config.totalDuration += this.config.delay;\n\n    this._calcPathDurations();\n  }\n\n  _calcPathDurations() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n      let startTime;\n\n      path.progress = 0;\n\n      if (this.config.reverse) {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.totalDuration - (path.delay + path.duration);\n        }\n      } else {\n        if (this.config.drawSequential) {\n          startTime = 0;\n        } else {\n          startTime = this.config.delay + path.delay;\n        }\n      }\n\n      path.startTime = startTime;\n      path.startProgress = (path.startTime / this.config.totalDuration);\n      path.durationProgress = (path.duration / this.config.totalDuration);\n    }\n  }\n\n  /**\n   * get\n   * @public\n   */\n  get() {\n    return this.config;\n  }\n\n  /**\n   * resize\n   * @public\n   */\n  resize() {\n\n    this.config.offset = this.el.getBoundingClientRect();\n    // this.config.scale = this.config.offset.width / this.config.width;\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n\n      path.el.getBoundingClientRect();\n      path.positions = this._getPathPoints(path.el, path.length);\n      this._updatePosition(path);\n    }\n  }\n\n  _parseDataAttrs() {\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n      let dataset = this.getDataset(path.el);\n\n      path.id = dataset.llpId;\n      path.delay = Number(dataset.llpDelay) || 0;\n      path.duration = Number(dataset.llpDuration) || 0;\n      path.reverse = Boolean(dataset.llpReverse) || false;\n      path.ease = Number(dataset.llpEase) || null;\n      path.strokeDash = dataset.llpStrokeDash || null;\n      path.delay *= this.config.speedMultiplier;\n      path.duration *= this.config.speedMultiplier;\n\n      this._setStyleAttrs(path);\n    }\n  }\n\n  _setStyleAttrs(path) {\n    let dataset = this.getDataset(path.el);\n\n    path.strokeColor = (dataset.llpStrokeColor || this.config.strokeColor);\n    if (path.strokeColor) {\n      path.el.style.stroke = path.strokeColor;\n    }\n\n    path.strokeOpacity = (dataset.llpStrokeOpacity || this.config.strokeOpacity);\n    if (path.strokeOpacity) {\n      path.el.style.strokeOpacity = path.strokeOpacity;\n    }\n\n    path.strokeWidth = (dataset.llpStrokeWidth || this.config.strokeWidth);\n    if (path.strokeWidth) {\n      path.el.style.strokeWidth = path.strokeWidth;\n    }\n\n    path.strokeCap = (dataset.llpStrokeCap || this.config.strokeCap);\n    if (path.strokeCap) {\n      path.el.style.strokeLinecap = path.strokeCap;\n    }\n\n    path.strokeJoin = (dataset.llpStrokeJoin || this.config.strokeJoin);\n    if (path.strokeJoin) {\n      path.el.style.strokeLinejoin = path.strokeJoin;\n    }\n  }\n\n  _setupPaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n\n      let path = this.__paths[i];\n\n      path.index = i;\n      path.length = this._getPathLength(path.el);\n      path.positions = this._getPathPoints(path.el, path.length);\n\n      path.el.style.strokeDasharray = this._getStrokeDashArray(path, path.length);\n      path.el.style.strokeDashoffset = path.length;\n\n      path.onStrokeStartDone = false;\n      path.onStrokeCompleteDone = false;\n    }\n  };\n\n  /**\n   * adjustStartTime\n   * Responsible for managing time.\n   * @private\n   * @param  {number} timestamp identifies current time\n   * @param  {object} data      contains options set on init() and paint()\n   */\n  adjustStartTime() {\n    let timestamp = performance.now();\n\n    this.config.startTime = timestamp - this.config.elapsedTime;\n    requestAnimationFrame(() => {\n      this._paint();\n    });\n  }\n\n  /**\n   * _paint\n   * Responsible for animating paths.\n   * Path incrementation is performed using requestAnimationFrame.\n   * @private\n   * @param  {number} timestamp   identifies current time\n   * @param  {object} data        contains options set on init() and paint()\n   */\n  _paint() {\n\n    if (!this.config) {\n      return;\n    }\n\n    // set startTime\n    if (!this.config.startTime) {\n      this.config.startTime = performance.now(); // new Date()\n    }\n\n    this.emit('update');\n\n    // set elapsedTime\n    let timestamp = performance.now();\n\n    this.config.elapsedTime = (timestamp - this.config.startTime);\n    this.config.linearProgress = (this.config.elapsedTime / this.config.totalDuration);\n\n    this.config.progress = this._getProgress(this.config.linearProgress, this.config.ease);\n    // console.log(this.config.elapsedTime, ' ', this.config.totalDuration);\n\n    this._updatePaths();\n\n    if (this.config.linearProgress >= 0 && this.config.linearProgress <= 1) {\n      this.__raf = requestAnimationFrame(() => {\n        this._paint();\n      });\n    } else {\n      if (this.config.repeat > 0) {\n        this.config.repeat--;\n        this.paint();\n      } else if (this.config.repeat === -1) {\n        this.paint();\n      } else {\n        this.emit('complete');\n      }\n    }\n  }\n\n  _updatePaths() {\n\n    for (let i = 0; i < this.__paths.length; i++) {\n      let path = this.__paths[i];\n      let pathProgress = this._getElapsedProgress(path);\n\n      path.progress = this._getProgress(pathProgress, path.ease);\n      this._setLine(path);\n      this._updatePosition(path);\n      this._updateStrokeCallbacks(path);\n    }\n  }\n\n  _getElapsedProgress(path) {\n\n    let elapsedProgress;\n\n    if (\n      this.config.progress >= path.startProgress &&\n      this.config.progress <= (path.startProgress + path.durationProgress)\n    ) {\n      elapsedProgress = (this.config.progress - path.startProgress) / path.durationProgress;\n    } else if (this.config.progress >= (path.startProgress + path.durationProgress)) {\n      elapsedProgress = 1;\n    } else if (this.config.progress <= path.startProgress) {\n      elapsedProgress = 0;\n    }\n\n    return elapsedProgress;\n  }\n\n  _getProgress(linearProgress, ease) {\n\n    let progress = linearProgress;\n\n    if (ease) {\n      progress = Easing[ease](linearProgress);\n    }\n    return progress;\n  }\n\n  _setLine(path) {\n\n    let el = path.el;\n    let length = path.progress * path.length;\n\n    if (path.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else if (this.config.reverse) {\n      el.style.strokeDashoffset = -path.length + length;\n    } else {\n      el.style.strokeDashoffset = (path.length - length);\n    }\n  }\n\n  _updateStrokeCallbacks(path) {\n\n    if (path.progress === 1) {\n\n      if (!path.onStrokeCompleteDone) {\n        path.onStrokeCompleteDone = true;\n\n        this.emit('complete:' + path.id, path);\n        this.emit('complete:all', path);\n      }\n\n    } else if (path.progress > 0.00001) {\n\n      if (!path.onStrokeStartDone) {\n        this.emit('start:' + path.id, path);\n        this.emit('start:all', path);\n        path.onStrokeStartDone = true;\n      }\n\n      this.emit('update:' + path.id, path);\n      this.emit('update:all', path);\n    }\n  }\n\n  /**\n   * _updatePosition\n   * Responsible for updating the paths x / y position.\n   * @private\n   */\n  _updatePosition(path) {\n    let index = Math.round((path.progress * (path.length - 1)));\n    let position = path.positions[index];\n\n    if (position) {\n      path.position = {\n        x: this.config.offset.left + position.x,\n        y: this.config.offset.top + position.y\n      };\n    }\n\n  }\n\n  _getTotalDuration() {\n\n    let totalDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathDelay = paths[i].delay || 0;\n\n      totalDuration += (paths[i].duration + pathDelay);\n    }\n\n    return totalDuration;\n  }\n\n  _getLongestDuration() {\n\n    let longestDuration = 0;\n    let paths = this.__paths;\n\n    for (let i = 0; i < paths.length; i++) {\n      let pathTotalDuration = paths[i].delay + paths[i].duration;\n\n      if (pathTotalDuration > longestDuration) {\n        longestDuration = pathTotalDuration;\n      }\n    }\n\n    return longestDuration;\n  };\n\n  /**\n   * _getPathLength\n   * Responsible for returning a svg path length.\n   * @return {number} path length\n   */\n  _getPathLength(el) {\n    return this._getTotalLength(el); // el.getTotalLength());\n  }\n\n  _getDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n  }\n\n  _getCircleLength(el) {\n    return Math.PI * 2 * el.getAttribute('r');\n  }\n\n  _getEllipseLength(el) {\n    let rx = parseInt(el.getAttribute('rx'), 1);\n    let ry = parseInt(el.getAttribute('ry'), 1);\n    let h = Math.pow((rx - ry), 2) / Math.pow((rx + ry), 2);\n    let totalLength = (Math.PI * (rx + ry)) * (1 + ((3 * h) / (Math.sqrt(4 - (3 * h)))));\n\n    return totalLength;\n  }\n\n  _getRectLength(el) {\n    return (el.getAttribute('width') * 2) + (el.getAttribute('height') * 2);\n  }\n\n  _getLineLength(el) {\n    return this._getDistance(\n      {\n        x: el.getAttribute('x1'),\n        y: el.getAttribute('y1')\n      },\n      {\n        x: el.getAttribute('x2'),\n        y: el.getAttribute('y2')\n      }\n    );\n  }\n\n  _getPolylineLength(el) {\n    const points = el.points;\n    let totalLength = 0;\n    let previousPos;\n\n    for (let i = 0 ; i < points.numberOfItems; i++) {\n      const currentPos = points.getItem(i);\n\n      if (i > 0) {\n        totalLength += this._getDistance(previousPos, currentPos);\n      }\n      previousPos = currentPos;\n    }\n    return totalLength;\n  }\n\n  _getPolygonLength(el) {\n    const points = el.points;\n\n    return this._getPolylineLength(el) + this._getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n  }\n\n  _getTotalLength(el) {\n\n    let length;\n\n    let tagName = el.tagName.toLowerCase();\n\n    switch (tagName) {\n      case 'circle':\n        length = this._getCircleLength(el);\n        break;\n      case 'rect':\n        length = this._getRectLength(el);\n        break;\n      case 'line':\n        length = this._getLineLength(el);\n        break;\n      case 'polyline':\n        length = this._getPolylineLength(el);\n        break;\n      case 'polygon':\n        length = this._getPolygonLength(el);\n        break;\n      default:\n        length = el.getTotalLength();\n    }\n\n    return length;\n  }\n\n  /**\n   * _getPathPoints\n   * Responsible for returning a svg path coords.\n   * @return {array} path coords\n   */\n  _getPathPoints(el, length) {\n\n    let arr = [];\n\n    for (let i = 0; i < length; i++) {\n      let position = el.getPointAtLength(i);\n\n      arr.push({\n        x: position.x,\n        y: position.y\n      });\n    };\n    return arr;\n  }\n\n  /**\n   * _getStrokeDashArray\n   * @private\n   */\n  _getStrokeDashArray(path, length) {\n    let strokeDash;\n\n    if (path.strokeDash) {\n      strokeDash = this._getStrokeDashString(path.strokeDash, length);\n    } else if (this.config.strokeDash) {\n      strokeDash = this._getStrokeDashString(this.config.strokeDash, length);\n    } else {\n      strokeDash = length + ' ' + length;\n    };\n    return strokeDash;\n  }\n\n  /**\n   * _getStrokeDashString\n   * @private\n   */\n  _getStrokeDashString(dashArray, length) {\n    let strokeDashString = '';\n    let strokeDashArray = dashArray.split(',');\n\n    let strokeDashTotal = 0;\n    let strokeDashNum;\n    let strokeDashRemainder;\n\n    for (let i = strokeDashArray.length - 1; i >= 0; i--) {\n      strokeDashTotal += Number(strokeDashArray[i]);\n    };\n    strokeDashNum = Math.floor(length / strokeDashTotal);\n    strokeDashRemainder = length - (strokeDashNum * strokeDashTotal);\n    for (let i = 0; i < strokeDashNum ; i++) {\n      strokeDashString += (dashArray + ', ');\n    };\n    let preArray = strokeDashString + strokeDashRemainder + ', ' + (length + 2);\n\n    return preArray.split(',').join('px,') + 'px';\n  }\n\n  _onVisibilityChange = () => {\n    if (document.hidden) {\n      this.pause();\n    } else {\n      this.resume();\n    }\n  }\n\n}\nwindow.LazyLinePainter = LazyLinePainter;\nexport default LazyLinePainter;\n"],"sourceRoot":""}