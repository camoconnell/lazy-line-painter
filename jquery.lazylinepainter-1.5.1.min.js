/*
 * Lazy Line Painter
 * SVG Stroke animation.
 *
 * https://github.com/camoconnell/lazy-line-painter
 * http://www.camoconnell.com
 *
 * Licensed under the MIT license.
 *
 */
!function(t){"use strict";var e="lazyLinePainter",a={init:function(a){return this.each(function(){var o=t(this),r=o.data(e);if(o.addClass("lazy-line"),!r){var n=t.extend({width:null,height:null,strokeWidth:2,strokeColor:"#000",strokeOverColor:null,strokeCap:"round",strokeJoin:"round",strokeOpacity:1,arrowEnd:"none",onComplete:null,onStart:null,onStrokeStart:null,onStrokeComplete:null,delay:null,overrideKey:null,drawSequential:!0,speedMultiplier:1,reverse:!1,responsive:!1},a),s=n.overrideKey?n.overrideKey:o.attr("id").replace("#",""),l=n.svgData[s].dimensions.width,p=n.svgData[s].dimensions.height;n.svgData=n.svgData[s].strokepath,null===n.width&&(n.width=l),null===n.height&&(n.height=p),n.responsive||o.css({width:n.width,height:n.height});var h=i("0 0 "+l+" "+p);n.svg=t(h),o.append(n.svg),o.data(e,n)}})},paint:function(){return this.each(function(){var a=t(this),o=a.data(e),s=function(){o.paths=[],o.longestDuration=0,o.playhead=0;var t=0,e=0,a=0;for(e=0;e<o.svgData.length;e++)t=o.svgData[e].duration*o.speedMultiplier,a+=t;for(e=0;e<o.svgData.length;e++){var s=n(o,e),i=s.getTotalLength();s.style.strokeDasharray=i+" "+i,s.style.strokeDashoffset=i,s.style.display="block",s.getBoundingClientRect(),t=o.svgData[e].duration*o.speedMultiplier,t>o.longestDuration&&(o.longestDuration=t);var l;o.reverse?(a-=t,l=a):l=o.playhead,o.paths.push({duration:t,drawStartTime:l,path:s,length:i,onStrokeStart:o.svgData[e].onStrokeStart||null,onStrokeComplete:o.svgData[e].onStrokeComplete||null}),o.playhead+=t}o.totalDuration=o.drawSequential?o.playhead:o.longestDuration,o.rAF=requestAnimationFrame(function(t){r(t,o)}),null!==o.onStart&&o.onStart()};null===o.delay?s():setTimeout(s,o.delay)})},pauseResume:function(){return this.each(function(){var a=t(this).data(e);a.paused?(a.paused=!1,requestAnimationFrame(function(t){o(t,a)})):(a.paused=!0,cancelAnimationFrame(a.rAF))})},erase:function(){return this.each(function(){var a=t(this),o=a.data(e);o.startTime=null,o.elapsedTime=null,cancelAnimationFrame(o.rAF),o.svg.empty()})},destroy:function(){return this.each(function(){var a=t(this);a.removeData(e),a.remove()})}},o=function(t,e){e.startTime=t-e.elapsedTime,requestAnimationFrame(function(t){r(t,e)})},r=function(t,e){e.startTime||(e.startTime=t),e.elapsedTime=t-e.startTime;for(var a=0;a<e.paths.length;a++){var o;if(e.drawSequential?(o=e.elapsedTime-e.paths[a].drawStartTime,0>o&&(o=0)):o=e.elapsedTime,o<e.paths[a].duration&&o>0){var n=o/e.paths[a].duration*e.paths[a].length,s=e.paths[a].path.style.strokeDashoffset.replace("px","");Math.abs(s-e.paths[a].length)<=1e-6&&(null!==e.onStrokeStart&&e.drawSequential&&e.onStrokeStart(e.paths[a]),null!==e.paths[a].onStrokeStart&&e.drawSequential&&e.paths[a].onStrokeStart()),e.paths[a].path.style.strokeDashoffset=e.reverse||e.svgData[a].reverse?-e.paths[a].length+n:e.paths[a].length-n}else o>e.paths[a].duration&&((a==e.paths.length-1||"0px"!==e.paths[a].path.style.strokeDashoffset&&"0px"!==e.paths[a+1].path.style.strokeDashoffset)&&(null!==e.onStrokeComplete&&e.drawSequential&&!e.onStrokeCompleteDone&&(e.onStrokeComplete(e.paths[a]),e.onStrokeCompleteDone=!0),null!==e.paths[a].onStrokeComplete&&e.drawSequential&&!e.paths[a].onStrokeCompleteDone&&(e.paths[a].onStrokeComplete(),e.paths[a].onStrokeCompleteDone=!0)),e.paths[a].path.style.strokeDashoffset=0)}e.elapsedTime<e.totalDuration?e.rAF=requestAnimationFrame(function(t){r(t,e)}):null!==e.onComplete&&e.onComplete()},n=function(e,a){var o=document.createElementNS("http://www.w3.org/2000/svg","path"),r=t(o);return e.svg.append(r),r.attr(s(e,e.svgData[a])),o},s=function(t,e){return{d:e.path,stroke:e.strokeColor?e.strokeColor:t.strokeColor,"fill-opacity":0,"stroke-opacity":e.strokeOpacity?e.strokeOpacity:t.strokeOpacity,"stroke-width":e.strokeWidth?e.strokeWidth:t.strokeWidth,"stroke-linecap":e.strokeCap?e.strokeCap:t.strokeCap,"stroke-linejoin":e.strokeJoin?e.strokeJoin:t.strokeJoin}},i=function(t){var e=document.createElementNS("http://www.w3.org/2000/svg","svg");return e.setAttributeNS(null,"viewBox",t),e.setAttribute("xmlns","http://www.w3.org/2000/svg"),e};t.fn.lazylinepainter=function(t){return a[t]?a[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void console.log("opps - issue finding method"):a.init.apply(this,arguments)}}(jQuery);